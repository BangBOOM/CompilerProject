{"Type": {"continue": -1, "struct": -1, "float": 10, "==": -1, "while": -1, "<": -1, "int": 8, "/": -1, ">": -1, "return": -1, "char": 11, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 9, ">=": -1, "+": -1, "st": 12, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "A": {"continue": -1, "struct": -1, "float": -1, "==": 25, "while": -1, "<": 25, "int": -1, "/": -1, ">": 25, "return": -1, "char": -1, "break": -1, "-": 24, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": 25, "+": 24, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": 25, ")": 25, "else": -1, "if": -1, "<=": 25, "#": 25}, "Program": {"continue": -1, "struct": 0, "float": 0, "==": -1, "while": -1, "<": -1, "int": 0, "/": -1, ">": -1, "return": -1, "char": 0, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 0, ">=": -1, "+": -1, "st": 0, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "JudgeStatement": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": 44, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 44, "{": -1, "(": 44, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "ElsePart": {"continue": 40, "struct": -1, "float": -1, "==": -1, "while": 40, "<": -1, "int": -1, "/": -1, ">": -1, "return": 40, "char": -1, "break": 40, "-": -1, "elif": -1, "NUM": -1, "}": 40, "*": -1, "CALL": 40, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 40, "{": -1, "(": -1, ";": -1, ")": -1, "else": 41, "if": 40, "<=": -1, "#": 40}, "N": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": 35, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": 34, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "NormalStatement": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 21, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "NormalStatementFollow": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": 22, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "ArgsFollow": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": 62, "ID": -1, "{": -1, "(": -1, ";": -1, ")": 64, "else": -1, "if": -1, "<=": -1, "#": 64}, "FuncsHead": {"continue": -1, "struct": -1, "float": 2, "==": -1, "while": -1, "<": -1, "int": 2, "/": -1, ">": -1, "return": -1, "char": 2, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 2, ">=": -1, "+": -1, "st": 2, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "F": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": 30, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 29, "{": -1, "(": 31, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "FormalParameters": {"continue": -1, "struct": -1, "float": 4, "==": -1, "while": -1, "<": -1, "int": 4, "/": -1, ">": -1, "return": -1, "char": 4, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 4, ">=": -1, "+": -1, "st": 4, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": 5, "else": -1, "if": -1, "<=": -1, "#": -1}, "Operation": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": 23, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 23, "{": -1, "(": 23, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "FuncCallFollow": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": 59, ",": -1, "ID": -1, "{": -1, "(": 60, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "CompareSymbol": {"continue": -1, "struct": -1, "float": -1, "==": 47, "while": -1, "<": 50, "int": -1, "/": -1, ">": 51, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": 49, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": 48, "#": -1}, "LocalVarDefine": {"continue": -1, "struct": -1, "float": 17, "==": -1, "while": -1, "<": -1, "int": 17, "/": -1, ">": -1, "return": -1, "char": 17, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 17, ">=": -1, "+": -1, "st": 17, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "LocalDefineList": {"continue": 16, "struct": -1, "float": 15, "==": -1, "while": 16, "<": -1, "int": 15, "/": -1, ">": -1, "return": 16, "char": 15, "break": 16, "-": -1, "elif": -1, "NUM": -1, "}": 16, "*": -1, "CALL": 16, "void": 15, ">=": -1, "+": -1, "st": 15, "=": -1, ",": -1, "ID": 16, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": 16, "<=": -1, "#": 16}, "Struct": {"continue": -1, "struct": 65, "float": 66, "==": -1, "while": -1, "<": -1, "int": 66, "/": -1, ">": -1, "return": -1, "char": 66, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 66, ">=": -1, "+": -1, "st": 66, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": 66}, "CodeBody": {"continue": 14, "struct": -1, "float": 14, "==": -1, "while": 14, "<": -1, "int": 14, "/": -1, ">": -1, "return": 14, "char": 14, "break": 14, "-": -1, "elif": -1, "NUM": -1, "}": 13, "*": -1, "CALL": 14, "void": 14, ">=": -1, "+": -1, "st": 14, "=": -1, ",": -1, "ID": 14, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": 14, "<=": -1, "#": -1}, "Args": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": 61, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 61, "{": -1, "(": 61, ";": -1, ")": 63, "else": -1, "if": -1, "<=": -1, "#": -1}, "LoopStatement": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": 53, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "Code": {"continue": 55, "struct": -1, "float": -1, "==": -1, "while": 52, "<": -1, "int": -1, "/": -1, ">": -1, "return": 56, "char": -1, "break": 54, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": 57, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 20, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": 36, "<=": -1, "#": -1}, "CodeList": {"continue": 18, "struct": -1, "float": -1, "==": -1, "while": 18, "<": -1, "int": -1, "/": -1, ">": -1, "return": 18, "char": -1, "break": 18, "-": -1, "elif": -1, "NUM": -1, "}": 19, "*": -1, "CALL": 18, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 18, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": 18, "<=": -1, "#": 19}, "B": {"continue": -1, "struct": -1, "float": -1, "==": 28, "while": -1, "<": 28, "int": -1, "/": 27, ">": 28, "return": -1, "char": -1, "break": -1, "-": 28, "elif": -1, "NUM": -1, "}": -1, "*": 27, "CALL": -1, "void": -1, ">=": 28, "+": 28, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": 28, ")": 28, "else": -1, "if": -1, "<=": 28, "#": 28}, "FuncCall": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": 58, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "T": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": 26, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 26, "{": -1, "(": 26, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "Funcs": {"continue": -1, "struct": -1, "float": 1, "==": -1, "while": -1, "<": -1, "int": 1, "/": -1, ">": -1, "return": -1, "char": 1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": 1, ">=": -1, "+": -1, "st": 1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": 3}, "FormalParametersFollow": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": 6, "ID": -1, "{": -1, "(": -1, ";": -1, ")": 7, "else": -1, "if": -1, "<=": -1, "#": 7}, "M": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": 33, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": 32, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": -1, "<=": -1, "#": -1}, "IfStatement": {"continue": -1, "struct": -1, "float": -1, "==": -1, "while": -1, "<": -1, "int": -1, "/": -1, ">": -1, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": -1, "else": -1, "if": 37, "<=": -1, "#": -1}, "IFStatementFollow": {"continue": 38, "struct": -1, "float": -1, "==": -1, "while": 38, "<": -1, "int": -1, "/": -1, ">": -1, "return": 38, "char": -1, "break": 38, "-": -1, "elif": 39, "NUM": -1, "}": 38, "*": -1, "CALL": 38, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 38, "{": -1, "(": -1, ";": -1, ")": -1, "else": 39, "if": 38, "<=": -1, "#": 38}, "JudgeStatementFollow": {"continue": -1, "struct": -1, "float": -1, "==": 45, "while": -1, "<": 45, "int": -1, "/": -1, ">": 45, "return": -1, "char": -1, "break": -1, "-": -1, "elif": -1, "NUM": -1, "}": -1, "*": -1, "CALL": -1, "void": -1, ">=": 45, "+": -1, "st": -1, "=": -1, ",": -1, "ID": -1, "{": -1, "(": -1, ";": -1, ")": 46, "else": -1, "if": -1, "<=": 45, "#": 46}, "ElseIFPart": {"continue": 43, "struct": -1, "float": -1, "==": -1, "while": 43, "<": -1, "int": -1, "/": -1, ">": -1, "return": 43, "char": -1, "break": 43, "-": -1, "elif": 42, "NUM": -1, "}": 43, "*": -1, "CALL": 43, "void": -1, ">=": -1, "+": -1, "st": -1, "=": -1, ",": -1, "ID": 43, "{": -1, "(": -1, ";": -1, ")": -1, "else": 43, "if": 43, "<=": -1, "#": 43}}