{"LoopStatement": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": 51, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "Funcs": {"return": -1, "ID": -1, "}": -1, "float": 1, "elif": -1, "<": -1, "void": 1, "(": -1, "while": -1, "NUM": -1, "char": 1, "else": -1, "int": 1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": 3}, "F": {"return": -1, "ID": 27, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 29, "while": -1, "NUM": 28, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "LocalVarDefine": {"return": -1, "ID": -1, "}": -1, "float": 15, "elif": -1, "<": -1, "void": 15, "(": -1, "while": -1, "NUM": -1, "char": 15, "else": -1, "int": 15, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "Operation": {"return": -1, "ID": 21, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 21, "while": -1, "NUM": 21, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "NormalStatement": {"return": -1, "ID": 19, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "Type": {"return": -1, "ID": -1, "}": -1, "float": 9, "elif": -1, "<": -1, "void": 8, "(": -1, "while": -1, "NUM": -1, "char": 10, "else": -1, "int": 7, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "FuncsHead": {"return": -1, "ID": -1, "}": -1, "float": 2, "elif": -1, "<": -1, "void": 2, "(": -1, "while": -1, "NUM": -1, "char": 2, "else": -1, "int": 2, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "JudgeStatement": {"return": -1, "ID": 42, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 42, "while": -1, "NUM": 42, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "M": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": 30, "if": -1, ">=": -1, ";": -1, "-": 31, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "FuncCall": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 54, "#": -1}, "A": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": 23, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": 23, "/": -1, "<=": 23, "+": 22, "if": -1, ">=": 23, ";": 23, "-": 22, ">": 23, ",": -1, "*": -1, "==": 23, "{": -1, "=": -1, "CALL": -1, "#": 23}, "Args": {"return": -1, "ID": 57, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 57, "while": -1, "NUM": 57, "char": -1, "else": -1, "int": -1, ")": 59, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": 58, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": 59}, "LocalDefineList": {"return": 14, "ID": 14, "}": 14, "float": 13, "elif": -1, "<": -1, "void": 13, "(": -1, "while": 14, "NUM": -1, "char": 13, "else": -1, "int": 13, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 14, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 14, "#": 14}, "ElseIFPart": {"return": 41, "ID": 41, "}": 41, "float": -1, "elif": 40, "<": -1, "void": -1, "(": -1, "while": 41, "NUM": -1, "char": -1, "else": 41, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 41, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 41, "#": 41}, "ElsePart": {"return": 38, "ID": 38, "}": 38, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": 38, "NUM": -1, "char": -1, "else": 39, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 38, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 38, "#": 38}, "Code": {"return": 52, "ID": 18, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": 50, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 34, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 53, "#": -1}, "B": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": 26, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": 26, "/": 25, "<=": 26, "+": 26, "if": -1, ">=": 26, ";": 26, "-": 26, ">": 26, ",": -1, "*": 25, "==": 26, "{": -1, "=": -1, "CALL": -1, "#": 26}, "IfStatement": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 35, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "FormalParameters": {"return": -1, "ID": -1, "}": -1, "float": 4, "elif": -1, "<": -1, "void": 4, "(": -1, "while": -1, "NUM": -1, "char": 4, "else": -1, "int": 4, ")": 6, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": 5, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": 6}, "T": {"return": -1, "ID": 24, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 24, "while": -1, "NUM": 24, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "CodeBody": {"return": 12, "ID": 12, "}": 11, "float": 12, "elif": -1, "<": -1, "void": 12, "(": -1, "while": 12, "NUM": -1, "char": 12, "else": -1, "int": 12, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 12, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 12, "#": -1}, "IFStatementFollow": {"return": 36, "ID": 36, "}": 36, "float": -1, "elif": 37, "<": -1, "void": -1, "(": -1, "while": 36, "NUM": -1, "char": -1, "else": 37, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 36, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 36, "#": 36}, "CompareSymbol": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": 48, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": 46, "+": -1, "if": -1, ">=": 47, ";": -1, "-": -1, ">": 49, ",": -1, "*": -1, "==": 45, "{": -1, "=": -1, "CALL": -1, "#": -1}, "Program": {"return": -1, "ID": -1, "}": -1, "float": 0, "elif": -1, "<": -1, "void": 0, "(": -1, "while": -1, "NUM": -1, "char": 0, "else": -1, "int": 0, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "CodeList": {"return": 16, "ID": 16, "}": 17, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": 16, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": 16, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": -1, "CALL": 16, "#": 17}, "FuncCallFollow": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": 56, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": 55, "CALL": -1, "#": -1}, "N": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": 33, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": 32, "==": -1, "{": -1, "=": -1, "CALL": -1, "#": -1}, "JudgeStatementFollow": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": 43, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": 44, "/": -1, "<=": 43, "+": -1, "if": -1, ">=": 43, ";": -1, "-": -1, ">": 43, ",": -1, "*": -1, "==": 43, "{": -1, "=": -1, "CALL": -1, "#": 44}, "NormalStatementFollow": {"return": -1, "ID": -1, "}": -1, "float": -1, "elif": -1, "<": -1, "void": -1, "(": -1, "while": -1, "NUM": -1, "char": -1, "else": -1, "int": -1, ")": -1, "/": -1, "<=": -1, "+": -1, "if": -1, ">=": -1, ";": -1, "-": -1, ">": -1, ",": -1, "*": -1, "==": -1, "{": -1, "=": 20, "CALL": -1, "#": -1}}