{"M": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": 33, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": 32, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "A": {"=": -1, "return": -1, "<": 25, "char": -1, "st": -1, "==": 25, "(": -1, ">": 25, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": 25, "break": -1, "-": 24, "<=": 25, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 25, "NUM": -1, ";": 25, "+": 24, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 25}, "JudgeStatement": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 44, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 44, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": 44, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "IfStatement": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": 37, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "Code": {"=": -1, "return": 56, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 57, "else": -1, "while": 52, ",": -1, "ID": 20, "}": -1, "int": -1, ">=": -1, "break": 54, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 55, "if": 36, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "Program": {"=": -1, "return": -1, "<": -1, "char": 0, "st": 0, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 0, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": 0, "continue": -1, "if": -1, "float": 0, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 0, "#": -1}, "Args": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 61, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 61, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 63, "NUM": 61, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "LocalVarDefine": {"=": -1, "return": -1, "<": -1, "char": 17, "st": 17, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 17, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": 17, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 17, "#": -1}, "CodeList": {"=": -1, "return": 18, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 18, "else": -1, "while": 18, ",": -1, "ID": 18, "}": 19, "int": -1, ">=": -1, "break": 18, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 18, "if": 18, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 19}, "N": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": 34, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": 35, "elif": -1, "{": -1, "void": -1, "#": -1}, "F": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 31, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 29, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": 30, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "FormalParametersFollow": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": 6, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 7, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 7}, "CodeBody": {"=": -1, "return": 14, "<": -1, "char": 14, "st": 14, "==": -1, "(": -1, ">": -1, "CALL": 14, "else": -1, "while": 14, ",": -1, "ID": 14, "}": 13, "int": 14, ">=": -1, "break": 14, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 14, "if": 14, "float": 14, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 14, "#": -1}, "FormalParameters": {"=": -1, "return": -1, "<": -1, "char": 4, "st": 4, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 4, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": 4, ")": 5, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 4, "#": -1}, "ArgsFollow": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": 62, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 64, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 64}, "CompareSymbol": {"=": -1, "return": -1, "<": 50, "char": -1, "st": -1, "==": 47, "(": -1, ">": 51, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": 49, "break": -1, "-": -1, "<=": 48, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "Funcs": {"=": -1, "return": -1, "<": -1, "char": 1, "st": 1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": 1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 1, "#": 3}, "LocalDefineList": {"=": -1, "return": 16, "<": -1, "char": 15, "st": 15, "==": -1, "(": -1, ">": -1, "CALL": 16, "else": -1, "while": 16, ",": -1, "ID": 16, "}": 16, "int": 15, ">=": -1, "break": 16, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 16, "if": 16, "float": 15, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 15, "#": 16}, "Type": {"=": -1, "return": -1, "<": -1, "char": 11, "st": 12, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 8, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": 10, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 9, "#": -1}, "FuncsHead": {"=": -1, "return": -1, "<": -1, "char": 2, "st": 2, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 2, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": 2, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 2, "#": -1}, "Struct": {"=": -1, "return": -1, "<": -1, "char": 66, "st": 66, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": 66, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": 65, "continue": -1, "if": -1, "float": 66, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": 66, "#": 66}, "IFStatementFollow": {"=": -1, "return": 38, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 38, "else": 39, "while": 38, ",": -1, "ID": 38, "}": 38, "int": -1, ">=": -1, "break": 38, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 38, "if": 38, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": 39, "{": -1, "void": -1, "#": 38}, "Operation": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 23, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 23, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": 23, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "JudgeStatementFollow": {"=": -1, "return": -1, "<": 45, "char": -1, "st": -1, "==": 45, "(": -1, ">": 45, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": 45, "break": -1, "-": -1, "<=": 45, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 46, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 46}, "NormalStatementFollow": {"=": 22, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "T": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 26, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 26, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": 26, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "ElsePart": {"=": -1, "return": 40, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 40, "else": 41, "while": 40, ",": -1, "ID": 40, "}": 40, "int": -1, ">=": -1, "break": 40, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 40, "if": 40, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": 40}, "B": {"=": -1, "return": -1, "<": 28, "char": -1, "st": -1, "==": 28, "(": -1, ">": 28, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": 28, "break": -1, "-": 28, "<=": 28, "*": 27, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": 28, "NUM": -1, ";": 28, "+": 28, "/": 27, "elif": -1, "{": -1, "void": -1, "#": 28}, "ElseIFPart": {"=": -1, "return": 43, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 43, "else": 43, "while": 43, ",": -1, "ID": 43, "}": 43, "int": -1, ">=": -1, "break": 43, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": 43, "if": 43, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": 42, "{": -1, "void": -1, "#": 43}, "LoopStatement": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": 53, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "NormalStatement": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": 21, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "FuncCallFollow": {"=": 59, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": 60, ">": -1, "CALL": -1, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}, "FuncCall": {"=": -1, "return": -1, "<": -1, "char": -1, "st": -1, "==": -1, "(": -1, ">": -1, "CALL": 58, "else": -1, "while": -1, ",": -1, "ID": -1, "}": -1, "int": -1, ">=": -1, "break": -1, "-": -1, "<=": -1, "*": -1, "struct": -1, "continue": -1, "if": -1, "float": -1, ")": -1, "NUM": -1, ";": -1, "+": -1, "/": -1, "elif": -1, "{": -1, "void": -1, "#": -1}}