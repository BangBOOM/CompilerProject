{"ElseIFPart": {"break": 43, ">": -1, ";": -1, "ID": 43, "/": -1, "}": 43, "st": -1, "while": 43, "struct": -1, "-": -1, "CALL": 43, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": 43, "(": -1, "int": -1, "=": -1, "return": 43, "+": -1, "==": -1, "continue": 43, "char": -1, "elif": 42, ",": -1, "if": 43, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 43}, "FormalParametersFollow": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": 7, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": 6, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 7}, "Struct": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 65, "while": -1, "struct": 64, "-": -1, "CALL": -1, "void": 65, ")": -1, "NUM": -1, "float": 65, "*": -1, "else": -1, "(": -1, "int": 65, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 65, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 65}, "T": {"break": -1, ">": -1, ";": -1, "ID": 26, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": 26, "float": -1, "*": -1, "else": -1, "(": 26, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "CodeList": {"break": 18, ">": -1, ";": -1, "ID": 18, "/": -1, "}": 19, "st": -1, "while": 18, "struct": -1, "-": -1, "CALL": 18, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": 18, "+": -1, "==": -1, "continue": 18, "char": -1, "elif": -1, ",": -1, "if": 18, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 19}, "CompareSymbol": {"break": -1, ">": 51, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": 47, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": 49, "<": 50, "<=": 48, "{": -1, "#": -1}, "JudgeStatementFollow": {"break": -1, ">": 45, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": 46, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": 45, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": 45, "<": 45, "<=": 45, "{": -1, "#": 46}, "FuncCall": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": 58, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "ElsePart": {"break": 40, ">": -1, ";": -1, "ID": 40, "/": -1, "}": 40, "st": -1, "while": 40, "struct": -1, "-": -1, "CALL": 40, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": 41, "(": -1, "int": -1, "=": -1, "return": 40, "+": -1, "==": -1, "continue": 40, "char": -1, "elif": -1, ",": -1, "if": 40, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 40}, "IfStatement": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": 37, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "B": {"break": -1, ">": 28, ";": 28, "ID": -1, "/": 27, "}": -1, "st": -1, "while": -1, "struct": -1, "-": 28, "CALL": -1, "void": -1, ")": 28, "NUM": -1, "float": -1, "*": 27, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": 28, "==": 28, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": 28, "<": 28, "<=": 28, "{": -1, "#": 28}, "NormalStatementFollow": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": 22, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "M": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": 33, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": 32, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "A": {"break": -1, ">": 25, ";": 25, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": 24, "CALL": -1, "void": -1, ")": 25, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": 24, "==": 25, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": 25, "<": 25, "<=": 25, "{": -1, "#": 25}, "Type": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 12, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": 9, ")": -1, "NUM": -1, "float": 10, "*": -1, "else": -1, "(": -1, "int": 8, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 11, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "F": {"break": -1, ">": -1, ";": -1, "ID": 29, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": 30, "float": -1, "*": -1, "else": -1, "(": 31, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "FormalParameters": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 4, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": 4, ")": 5, "NUM": -1, "float": 4, "*": -1, "else": -1, "(": -1, "int": 4, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 4, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "N": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": 35, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": 34, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "Operation": {"break": -1, ">": -1, ";": -1, "ID": 23, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": 23, "float": -1, "*": -1, "else": -1, "(": 23, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "Code": {"break": 54, ">": -1, ";": -1, "ID": 20, "/": -1, "}": -1, "st": -1, "while": 52, "struct": -1, "-": -1, "CALL": 57, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": 56, "+": -1, "==": -1, "continue": 55, "char": -1, "elif": -1, ",": -1, "if": 36, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "CodeBody": {"break": 14, ">": -1, ";": -1, "ID": 14, "/": -1, "}": 13, "st": 14, "while": 14, "struct": -1, "-": -1, "CALL": 14, "void": 14, ")": -1, "NUM": -1, "float": 14, "*": -1, "else": -1, "(": -1, "int": 14, "=": -1, "return": 14, "+": -1, "==": -1, "continue": 14, "char": 14, "elif": -1, ",": -1, "if": 14, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "LocalVarDefine": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 17, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": 17, ")": -1, "NUM": -1, "float": 17, "*": -1, "else": -1, "(": -1, "int": 17, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 17, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "JudgeStatement": {"break": -1, ">": -1, ";": -1, "ID": 44, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": 44, "float": -1, "*": -1, "else": -1, "(": 44, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "NormalStatement": {"break": -1, ">": -1, ";": -1, "ID": 21, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "IFStatementFollow": {"break": 38, ">": -1, ";": -1, "ID": 38, "/": -1, "}": 38, "st": -1, "while": 38, "struct": -1, "-": -1, "CALL": 38, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": 39, "(": -1, "int": -1, "=": -1, "return": 38, "+": -1, "==": -1, "continue": 38, "char": -1, "elif": 39, ",": -1, "if": 38, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 38}, "Args": {"break": -1, ">": -1, ";": -1, "ID": 61, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": 63, "NUM": 61, "float": -1, "*": -1, "else": -1, "(": 61, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": 62, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 63}, "Funcs": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": 1, ")": -1, "NUM": -1, "float": 1, "*": -1, "else": -1, "(": -1, "int": 1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 3}, "LocalDefineList": {"break": 16, ">": -1, ";": -1, "ID": 16, "/": -1, "}": 16, "st": 15, "while": 16, "struct": -1, "-": -1, "CALL": 16, "void": 15, ")": -1, "NUM": -1, "float": 15, "*": -1, "else": -1, "(": -1, "int": 15, "=": -1, "return": 16, "+": -1, "==": -1, "continue": 16, "char": 15, "elif": -1, ",": -1, "if": 16, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": 16}, "FuncsHead": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 2, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": 2, ")": -1, "NUM": -1, "float": 2, "*": -1, "else": -1, "(": -1, "int": 2, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 2, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "Program": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": 0, "while": -1, "struct": 0, "-": -1, "CALL": -1, "void": 0, ")": -1, "NUM": -1, "float": 0, "*": -1, "else": -1, "(": -1, "int": 0, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": 0, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "LoopStatement": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": 53, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": -1, "int": -1, "=": -1, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}, "FuncCallFollow": {"break": -1, ">": -1, ";": -1, "ID": -1, "/": -1, "}": -1, "st": -1, "while": -1, "struct": -1, "-": -1, "CALL": -1, "void": -1, ")": -1, "NUM": -1, "float": -1, "*": -1, "else": -1, "(": 60, "int": -1, "=": 59, "return": -1, "+": -1, "==": -1, "continue": -1, "char": -1, "elif": -1, ",": -1, "if": -1, ">=": -1, "<": -1, "<=": -1, "{": -1, "#": -1}}