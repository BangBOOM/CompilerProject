{
  "LocalVarDefine": {
    "float": 15,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 15,
    "char": 15,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 15,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "arg": {
    "float": -1,
    "NUM": 61,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 60,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "LoopStatement": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": 51,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "LocalDefineList": {
    "float": 13,
    "NUM": -1,
    "if": 14,
    "(": -1,
    "FUN": 14,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 13,
    "char": 13,
    ">=": -1,
    "}": 14,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 14,
    "/": -1,
    "*": -1,
    "while": 14,
    "int": 13,
    "elif": -1,
    "==": -1,
    "return": 14,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 14
  },
  "NormalStatement": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 19,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "CompareSymbol": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": 49,
    "void": -1,
    "char": -1,
    ">=": 47,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": 48,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": 45,
    "return": -1,
    "{": -1,
    "<=": 46,
    ",": -1,
    "#": -1
  },
  "Args": {
    "float": -1,
    "NUM": 57,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": 59,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 57,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": 58,
    "#": 59
  },
  "ElseIFPart": {
    "float": -1,
    "NUM": -1,
    "if": 41,
    "(": -1,
    "FUN": 41,
    "else": 41,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": 41,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 41,
    "/": -1,
    "*": -1,
    "while": 41,
    "int": -1,
    "elif": 40,
    "==": -1,
    "return": 41,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 41
  },
  "A": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": 23,
    "void": -1,
    "char": -1,
    ">=": 23,
    "}": -1,
    "+": 22,
    ")": 23,
    ";": 23,
    "<": 23,
    "-": 22,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": 23,
    "return": -1,
    "{": -1,
    "<=": 23,
    ",": -1,
    "#": 23
  },
  "Operation": {
    "float": -1,
    "NUM": 21,
    "if": -1,
    "(": 21,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 21,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "FuncsHead": {
    "float": 2,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 2,
    "char": 2,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 2,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "T": {
    "float": -1,
    "NUM": 24,
    "if": -1,
    "(": 24,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 24,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "NormalStatementFollow": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": 20,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "IFStatementFollow": {
    "float": -1,
    "NUM": -1,
    "if": 36,
    "(": -1,
    "FUN": 36,
    "else": 37,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": 36,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 36,
    "/": -1,
    "*": -1,
    "while": 36,
    "int": -1,
    "elif": 37,
    "==": -1,
    "return": 36,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 36
  },
  "CodeList": {
    "float": -1,
    "NUM": -1,
    "if": 16,
    "(": -1,
    "FUN": 16,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": 17,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 16,
    "/": -1,
    "*": -1,
    "while": 16,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": 16,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 17
  },
  "Type": {
    "float": 9,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 8,
    "char": 10,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 7,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "B": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": 26,
    "void": -1,
    "char": -1,
    ">=": 26,
    "}": -1,
    "+": 26,
    ")": 26,
    ";": 26,
    "<": 26,
    "-": 26,
    "ID": -1,
    "/": 25,
    "*": 25,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": 26,
    "return": -1,
    "{": -1,
    "<=": 26,
    ",": -1,
    "#": 26
  },
  "M": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": 30,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": 31,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "JudgeStatementFollow": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": 43,
    "void": -1,
    "char": -1,
    ">=": 43,
    "}": -1,
    "+": -1,
    ")": 44,
    ";": -1,
    "<": 43,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": 43,
    "return": -1,
    "{": -1,
    "<=": 43,
    ",": -1,
    "#": 44
  },
  "N": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": 33,
    "*": 32,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "ElsePart": {
    "float": -1,
    "NUM": -1,
    "if": 38,
    "(": -1,
    "FUN": 38,
    "else": 39,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": 38,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 38,
    "/": -1,
    "*": -1,
    "while": 38,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": 38,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 38
  },
  "F": {
    "float": -1,
    "NUM": 28,
    "if": -1,
    "(": 29,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 27,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "Funcs": {
    "float": 1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 1,
    "char": 1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": 3
  },
  "Code": {
    "float": -1,
    "NUM": -1,
    "if": 34,
    "(": -1,
    "FUN": 53,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 18,
    "/": -1,
    "*": -1,
    "while": 50,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": 52,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "FuncCallFollow": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": 56,
    "FUN": -1,
    "else": -1,
    "=": 55,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "IfStatement": {
    "float": -1,
    "NUM": -1,
    "if": 35,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "Program": {
    "float": 0,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 0,
    "char": 0,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 0,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "FormalParameters": {
    "float": 4,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 4,
    "char": 4,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": 6,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": 4,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": 5,
    "#": 6
  },
  "JudgeStatement": {
    "float": -1,
    "NUM": 42,
    "if": -1,
    "(": 42,
    "FUN": -1,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 42,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "FuncCall": {
    "float": -1,
    "NUM": -1,
    "if": -1,
    "(": -1,
    "FUN": 54,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": -1,
    "char": -1,
    ">=": -1,
    "}": -1,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": -1,
    "/": -1,
    "*": -1,
    "while": -1,
    "int": -1,
    "elif": -1,
    "==": -1,
    "return": -1,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  },
  "CodeBody": {
    "float": 12,
    "NUM": -1,
    "if": 12,
    "(": -1,
    "FUN": 12,
    "else": -1,
    "=": -1,
    ">": -1,
    "void": 12,
    "char": 12,
    ">=": -1,
    "}": 11,
    "+": -1,
    ")": -1,
    ";": -1,
    "<": -1,
    "-": -1,
    "ID": 12,
    "/": -1,
    "*": -1,
    "while": 12,
    "int": 12,
    "elif": -1,
    "==": -1,
    "return": 12,
    "{": -1,
    "<=": -1,
    ",": -1,
    "#": -1
  }
}